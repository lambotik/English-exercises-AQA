{
  "uid" : "89a5c9e9ec56418",
  "name" : "Check main page options.",
  "fullName" : "tests.test_cards.TestPrepositions_1_3#test_check_main_options",
  "historyId" : "0a28e478a677ded00b8598cf9253bd4f",
  "time" : {
    "start" : 1698687484703,
    "stop" : 1698687484703,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x5574273f5fb3 <unknown>\n#1 0x5574270c94a7 <unknown>\n#2 0x5574270fcc93 <unknown>\n#3 0x5574270f910c <unknown>\n#4 0x55742713bac6 <unknown>\n#5 0x557427132713 <unknown>\n#6 0x55742710518b <unknown>\n#7 0x557427105f7e <unknown>\n#8 0x5574273bb8d8 <unknown>\n#9 0x5574273bf800 <unknown>\n#10 0x5574273c9cfc <unknown>\n#11 0x5574273c0418 <unknown>\n#12 0x55742738d42f <unknown>\n#13 0x5574273e44e8 <unknown>\n#14 0x5574273e46b4 <unknown>\n#15 0x5574273f5143 <unknown>\n#16 0x7f01d9294ac3 <unknown>",
  "statusTrace" : "@pytest.fixture()\n    def driver():\n        options = Options()\n        # options.add_argument('--headless')\n>       driver = webdriver.Chrome(options=options)\n\ntests/conftest.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/chromium/webdriver.py:56: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:205: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:289: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f73938ce110>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: Chrome failed to sta...\\\\n#14 0x5574273e46b4 \\\\u003Cunknown>\\\\n#15 0x5574273f5143 \\\\u003Cunknown>\\\\n#16 0x7f01d9294ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\nE         (session not created: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       #0 0x5574273f5fb3 <unknown>\nE       #1 0x5574270c94a7 <unknown>\nE       #2 0x5574270fcc93 <unknown>\nE       #3 0x5574270f910c <unknown>\nE       #4 0x55742713bac6 <unknown>\nE       #5 0x557427132713 <unknown>\nE       #6 0x55742710518b <unknown>\nE       #7 0x557427105f7e <unknown>\nE       #8 0x5574273bb8d8 <unknown>\nE       #9 0x5574273bf800 <unknown>\nE       #10 0x5574273c9cfc <unknown>\nE       #11 0x5574273c0418 <unknown>\nE       #12 0x55742738d42f <unknown>\nE       #13 0x5574273e44e8 <unknown>\nE       #14 0x5574273e46b4 <unknown>\nE       #15 0x5574273f5143 <unknown>\nE       #16 0x7f01d9294ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: SessionNotCreatedException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1698687480565,
      "stop" : 1698687480637,
      "duration" : 72
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1698687484703,
      "stop" : 1698687485369,
      "duration" : 666
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x5574273f5fb3 <unknown>\n#1 0x5574270c94a7 <unknown>\n#2 0x5574270fcc93 <unknown>\n#3 0x5574270f910c <unknown>\n#4 0x55742713bac6 <unknown>\n#5 0x557427132713 <unknown>\n#6 0x55742710518b <unknown>\n#7 0x557427105f7e <unknown>\n#8 0x5574273bb8d8 <unknown>\n#9 0x5574273bf800 <unknown>\n#10 0x5574273c9cfc <unknown>\n#11 0x5574273c0418 <unknown>\n#12 0x55742738d42f <unknown>\n#13 0x5574273e44e8 <unknown>\n#14 0x5574273e46b4 <unknown>\n#15 0x5574273f5143 <unknown>\n#16 0x7f01d9294ac3 <unknown>\n\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1123, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/_pytest/fixtures.py\", line 895, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/home/runner/work/English-exercises-AQA/English-exercises-AQA/tests/conftest.py\", line 14, in driver\n    driver = webdriver.Chrome(options=options)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/chrome/webdriver.py\", line 45, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/chromium/webdriver.py\", line 56, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 205, in __init__\n    self.start_session(capabilities)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 289, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 0,
    "hasContent" : true
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "In/on time, at/in the end/beginning."
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_cards"
  }, {
    "name" : "subSuite",
    "value" : "TestPrepositions_1_3"
  }, {
    "name" : "host",
    "value" : "fv-az592-825"
  }, {
    "name" : "thread",
    "value" : "1949-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_cards"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 8,
        "unknown" : 0,
        "total" : 11
      },
      "items" : [ {
        "uid" : "6085e42987d27c1f",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x564065f60fb3 <unknown>\n#1 0x564065c344a7 <unknown>\n#2 0x564065c67c93 <unknown>\n#3 0x564065c6410c <unknown>\n#4 0x564065ca6ac6 <unknown>\n#5 0x564065c9d713 <unknown>\n#6 0x564065c7018b <unknown>\n#7 0x564065c70f7e <unknown>\n#8 0x564065f268d8 <unknown>\n#9 0x564065f2a800 <unknown>\n#10 0x564065f34cfc <unknown>\n#11 0x564065f2b418 <unknown>\n#12 0x564065ef842f <unknown>\n#13 0x564065f4f4e8 <unknown>\n#14 0x564065f4f6b4 <unknown>\n#15 0x564065f60143 <unknown>\n#16 0x7efd26894ac3 <unknown>",
        "time" : {
          "start" : 1698687090094,
          "stop" : 1698687090094,
          "duration" : 0
        }
      }, {
        "uid" : "76a39fb404296f21",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55bde4639fb3 <unknown>\n#1 0x55bde430d4a7 <unknown>\n#2 0x55bde4340c93 <unknown>\n#3 0x55bde433d10c <unknown>\n#4 0x55bde437fac6 <unknown>\n#5 0x55bde4376713 <unknown>\n#6 0x55bde434918b <unknown>\n#7 0x55bde4349f7e <unknown>\n#8 0x55bde45ff8d8 <unknown>\n#9 0x55bde4603800 <unknown>\n#10 0x55bde460dcfc <unknown>\n#11 0x55bde4604418 <unknown>\n#12 0x55bde45d142f <unknown>\n#13 0x55bde46284e8 <unknown>\n#14 0x55bde46286b4 <unknown>\n#15 0x55bde4639143 <unknown>\n#16 0x7f2b8ea94ac3 <unknown>",
        "time" : {
          "start" : 1698686830098,
          "stop" : 1698686830098,
          "duration" : 0
        }
      }, {
        "uid" : "8f4b06ec18487f21",
        "status" : "passed",
        "time" : {
          "start" : 1698682461015,
          "stop" : 1698682466946,
          "duration" : 5931
        }
      }, {
        "uid" : "3b84b7a889c452a0",
        "status" : "passed",
        "time" : {
          "start" : 1698682138547,
          "stop" : 1698682144172,
          "duration" : 5625
        }
      }, {
        "uid" : "b92dd7abb1bfd011",
        "status" : "passed",
        "time" : {
          "start" : 1698681815785,
          "stop" : 1698681821758,
          "duration" : 5973
        }
      }, {
        "uid" : "6082188d901a1655",
        "status" : "passed",
        "time" : {
          "start" : 1698680723252,
          "stop" : 1698680728604,
          "duration" : 5352
        }
      }, {
        "uid" : "12b77e74f180b1e7",
        "status" : "passed",
        "time" : {
          "start" : 1698679314208,
          "stop" : 1698679321254,
          "duration" : 7046
        }
      }, {
        "uid" : "b5f75db80fbd2797",
        "status" : "passed",
        "time" : {
          "start" : 1698679029727,
          "stop" : 1698679036276,
          "duration" : 6549
        }
      }, {
        "uid" : "365445952be0b7c7",
        "status" : "passed",
        "time" : {
          "start" : 1698678016648,
          "stop" : 1698678024118,
          "duration" : 7470
        }
      }, {
        "uid" : "d49064dd6c23648e",
        "reportUrl" : "https://lambotik.github.io/English-exercises-AQA/8//#testresult/d49064dd6c23648e",
        "status" : "passed",
        "time" : {
          "start" : 1698607601201,
          "stop" : 1698607606509,
          "duration" : 5308
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "89a5c9e9ec56418.json",
  "parameterValues" : [ ]
}