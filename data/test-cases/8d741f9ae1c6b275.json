{
  "uid" : "8d741f9ae1c6b275",
  "name" : "Check questions no repeated.",
  "fullName" : "tests.test_cards.TestPrepositions_1_1#test_check_questions_no_repeated",
  "historyId" : "ab7603033d5085e6afd0f3edb4801167",
  "time" : {
    "start" : 1698686828669,
    "stop" : 1698686828669,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55daeadfcfb3 <unknown>\n#1 0x55daeaad04a7 <unknown>\n#2 0x55daeab03c93 <unknown>\n#3 0x55daeab0010c <unknown>\n#4 0x55daeab42ac6 <unknown>\n#5 0x55daeab39713 <unknown>\n#6 0x55daeab0c18b <unknown>\n#7 0x55daeab0cf7e <unknown>\n#8 0x55daeadc28d8 <unknown>\n#9 0x55daeadc6800 <unknown>\n#10 0x55daeadd0cfc <unknown>\n#11 0x55daeadc7418 <unknown>\n#12 0x55daead9442f <unknown>\n#13 0x55daeadeb4e8 <unknown>\n#14 0x55daeadeb6b4 <unknown>\n#15 0x55daeadfc143 <unknown>\n#16 0x7fc616494ac3 <unknown>",
  "statusTrace" : "@pytest.fixture()\n    def driver():\n        options = Options()\n        # options.add_argument('--headless')\n>       driver = webdriver.Chrome(options=options)\n\ntests/conftest.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/chromium/webdriver.py:56: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:205: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:289: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f43980fb340>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: Chrome failed to sta...\\\\n#14 0x55daeadeb6b4 \\\\u003Cunknown>\\\\n#15 0x55daeadfc143 \\\\u003Cunknown>\\\\n#16 0x7fc616494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\nE         (session not created: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       #0 0x55daeadfcfb3 <unknown>\nE       #1 0x55daeaad04a7 <unknown>\nE       #2 0x55daeab03c93 <unknown>\nE       #3 0x55daeab0010c <unknown>\nE       #4 0x55daeab42ac6 <unknown>\nE       #5 0x55daeab39713 <unknown>\nE       #6 0x55daeab0c18b <unknown>\nE       #7 0x55daeab0cf7e <unknown>\nE       #8 0x55daeadc28d8 <unknown>\nE       #9 0x55daeadc6800 <unknown>\nE       #10 0x55daeadd0cfc <unknown>\nE       #11 0x55daeadc7418 <unknown>\nE       #12 0x55daead9442f <unknown>\nE       #13 0x55daeadeb4e8 <unknown>\nE       #14 0x55daeadeb6b4 <unknown>\nE       #15 0x55daeadfc143 <unknown>\nE       #16 0x7fc616494ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: SessionNotCreatedException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1698686828669,
      "stop" : 1698686829335,
      "duration" : 666
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55daeadfcfb3 <unknown>\n#1 0x55daeaad04a7 <unknown>\n#2 0x55daeab03c93 <unknown>\n#3 0x55daeab0010c <unknown>\n#4 0x55daeab42ac6 <unknown>\n#5 0x55daeab39713 <unknown>\n#6 0x55daeab0c18b <unknown>\n#7 0x55daeab0cf7e <unknown>\n#8 0x55daeadc28d8 <unknown>\n#9 0x55daeadc6800 <unknown>\n#10 0x55daeadd0cfc <unknown>\n#11 0x55daeadc7418 <unknown>\n#12 0x55daead9442f <unknown>\n#13 0x55daeadeb4e8 <unknown>\n#14 0x55daeadeb6b4 <unknown>\n#15 0x55daeadfc143 <unknown>\n#16 0x7fc616494ac3 <unknown>\n\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1123, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/_pytest/fixtures.py\", line 895, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/home/runner/work/English-exercises-AQA/English-exercises-AQA/tests/conftest.py\", line 14, in driver\n    driver = webdriver.Chrome(options=options)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/chrome/webdriver.py\", line 45, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/chromium/webdriver.py\", line 56, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 205, in __init__\n    self.start_session(capabilities)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 289, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 0
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1698686827356,
      "stop" : 1698686827428,
      "duration" : 72
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Test Prepositions OfT Time Page."
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_cards"
  }, {
    "name" : "subSuite",
    "value" : "TestPrepositions_1_1"
  }, {
    "name" : "host",
    "value" : "fv-az563-398"
  }, {
    "name" : "thread",
    "value" : "1823-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_cards"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 1,
        "skipped" : 2,
        "passed" : 6,
        "unknown" : 0,
        "total" : 10
      },
      "items" : [ {
        "uid" : "441f1cc2a702dcd6",
        "status" : "passed",
        "time" : {
          "start" : 1698682449293,
          "stop" : 1698682454289,
          "duration" : 4996
        }
      }, {
        "uid" : "7766f55a1772ab1d",
        "status" : "passed",
        "time" : {
          "start" : 1698682128171,
          "stop" : 1698682132394,
          "duration" : 4223
        }
      }, {
        "uid" : "22115a33088c8413",
        "status" : "failed",
        "statusDetails" : "AssertionError: Question is repeated\nassert {1: \"We have ...sunrise', ...} == {1: \"We have ...sunrise', ...}\n  Omitting 31 identical items, use -vv to show\n  Left contains 1 more item:\n  {16: 'We play basketball ... Saturday afternoons'}\n  Full diff:\n    {\n     1: \"We have a daily meeting ... 10:30am. Don't be late!\",\n     2: 'We made it ... the past',\n     3: 'We hope to achieve it ... next century',\n     4: 'We are gonna ride a bike today ... sunrise',\n     5: 'We are gonna have a party ... Friday',\n     6: \"I got a new lego ... Christmas' Eve\",\n     7: 'We were called to arms ... 22 September',\n     8: 'Humankind ... has invented it this century',\n     9: 'Knock-knock. Who is there? The Wolf. Is The Pig at home ... present?',\n     10: \"I can't help you ... the moment\",\n     11: 'I read fairytales to my children ... bedtime',\n     12: 'We make pancakes ... Saturday mornings',\n     13: 'We play basketball ... Saturday afternoons',\n     14: 'I like to take a nap ... dinnertime',\n     15: 'We did it ... the afternoon',\n  +  16: 'We play basketball ... Saturday afternoons',\n     17: \"We usually drink tea ... 3 o'clock\",\n     18: 'We made this ... the 2010s',\n     19: 'I usually write articles ... the weekend',\n     20: 'Stars shine ... night',\n     21: 'We are going home ... Christmas',\n     22: 'We finished ... the same time',\n     23: 'We are gonna drive a car today ... sunrise',\n     24: 'Pushkin was born ... June 6, 1799',\n     25: 'Humankind invented this ... the Ice Age',\n     26: 'We got married ... November',\n     27: 'We are going to aqua park ... my birthday',\n     28: 'We do that ... the afternoons',\n     29: 'We have English lessons ... Wednesday evenings',\n     30: 'We play cards ... Saturday evenings',\n     31: 'We hope to achieve it ... the future',\n     32: 'We are going home ... Christmas day',\n    }",
        "time" : {
          "start" : 1698681804581,
          "stop" : 1698681809092,
          "duration" : 4511
        }
      }, {
        "uid" : "8a58faf149906eba",
        "status" : "passed",
        "time" : {
          "start" : 1698680712832,
          "stop" : 1698680717187,
          "duration" : 4355
        }
      }, {
        "uid" : "3216903a0d41a495",
        "status" : "passed",
        "time" : {
          "start" : 1698679300956,
          "stop" : 1698679306345,
          "duration" : 5389
        }
      }, {
        "uid" : "3947306b4734313a",
        "status" : "passed",
        "time" : {
          "start" : 1698679017668,
          "stop" : 1698679022768,
          "duration" : 5100
        }
      }, {
        "uid" : "6267f3040d859e77",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nAssertionError: Question is repeated\nassert {1: 'I read f...moment?', ...} == {1: 'I read f...moment?', ...}\n  Omitting 31 identical items, use -vv to show\n  Left contains 1 more item:\n  {30: 'We play basketball ... Sunday afternoons'}\n  Full diff:\n    {\n     1: 'I read fairytales to my children ... bedtime',\n     2: 'We made it ... the past',\n     3: 'I usually write articles ... the weekend',\n     4: 'Knock-knock. Who is there? The Wolf. Is The Pig at home ... the present '\n        'moment?',\n     5: 'We did it ... the morning',\n     6: 'We are gonna ride a bike today ... sunset',\n     7: 'We finished ... the same time',\n     8: \"I can't help you ... the moment\",\n     9: 'Humankind invented this ... the Ice Age',\n     10: 'We were called to arms ... 24 February',\n     11: 'We are going to aqua park ... my birthday',\n     12: 'We made this ... the 19th century',\n     13: 'We hope to achieve it ... the future',\n     14: 'We play cards ... Sunday evenings',\n     15: 'We got married ... October',\n     16: 'Humankind ... will invent it next century',\n     17: 'Pushkin was born ... June 6, 1799',\n     18: 'We are going home ... Christmas day',\n     19: 'Stars shine ... night',\n     20: 'We are gonna have a party ... Tuesday',\n     21: 'We do that ... the afternoons',\n     22: \"I got a new lego ... New Year's Eve\",\n     23: 'We make pancakes ... Saturday mornings',\n     24: 'We play basketball ... Sunday afternoons',\n     25: 'We are going home ... Christmas',\n     26: 'We hope to achieve it ... next century',\n     27: \"We have a daily meeting ... 10:30am. Don't be late!\",\n     28: 'I like to take a nap ... dinnertime',\n     29: 'We are gonna drive a car today ... noon',\n  +  30: 'We play basketball ... Sunday afternoons',\n     31: 'We have English lessons ... Monday evenings',\n     32: \"We usually drink tea ... 3 o'clock\",\n    }",
        "time" : {
          "start" : 1698678002703,
          "stop" : 1698678008757,
          "duration" : 6054
        }
      }, {
        "uid" : "ea3a42a9a02fb787",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nAssertionError: Question is repeated\nassert {1: 'We got m...e late!\", ...} == {1: 'We got m...e late!\", ...}\n  Omitting 31 identical items, use -vv to show\n  Left contains 1 more item:\n  {23: 'We play basketball ... Sunday afternoons'}\n  Full diff:\n    {\n     1: 'We got married ... March',\n     2: 'I like to take a nap ... dinnertime',\n     3: 'We play cards ... Friday evenings',\n     4: \"We have a daily meeting ... 10:30am. Don't be late!\",\n     5: 'We are going to aqua park ... my birthday',\n     6: 'Humankind invented this ... the Ice Age',\n     7: 'We are going home ... Christmas day',\n     8: 'We are gonna drive a car today ... sunrise',\n     9: 'We play basketball ... Sunday afternoons',\n     10: 'We finished ... the same time',\n     11: \"We usually drink tea ... 5 o'clock\",\n     12: 'Knock-knock. Who is there? The Wolf. Is The Pig at home ... the present '\n         'moment?',\n     13: 'Pushkin was born ... June 6, 1799',\n     14: 'We make pancakes ... Saturday mornings',\n     15: \"I got a new lego ... New Year's Eve\",\n     16: 'We made this ... the 19th century',\n     17: 'I read fairytales to my children ... bedtime',\n     18: 'We made it ... the past',\n     19: 'We are gonna ride a bike today ... sunrise',\n     20: 'We are going home ... Christmas',\n     21: 'We have English lessons ... Wednesday evenings',\n     22: 'We hope to achieve it ... the future',\n  +  23: 'We play basketball ... Sunday afternoons',\n     24: 'We hope to achieve it ... next century',\n     25: 'We did it ... the morning',\n     26: 'We are gonna have a party ... Friday',\n     27: 'I usually write articles ... the weekend',\n     28: 'Stars shine ... night',\n     29: 'Humankind ... has invented it last century',\n     30: \"I can't help you ... the moment\",\n     31: 'We were called to arms ... 24 Feb. 2022',\n     32: 'We do that ... the mornings',\n    }",
        "time" : {
          "start" : 1698677671009,
          "stop" : 1698677677852,
          "duration" : 6843
        }
      }, {
        "uid" : "eda001bce53190c0",
        "reportUrl" : "https://lambotik.github.io/English-exercises-AQA/8//#testresult/eda001bce53190c0",
        "status" : "passed",
        "time" : {
          "start" : 1698607591273,
          "stop" : 1698607595408,
          "duration" : 4135
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "8d741f9ae1c6b275.json",
  "parameterValues" : [ ]
}